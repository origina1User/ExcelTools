Sub UpdateResultsSheetReferences()
    Dim ws As Worksheet
    Dim cell As Range
    Dim oldSheetName As String
    Dim newSheetName As String
    Dim formulaRange As Range
    Dim count As Long: count = 0

    Dim sheetPairs() As Variant
    Dim s As Worksheet
    Dim baseName As String
    Dim datePart As Date
    Dim parts() As String
    Dim i As Long, j As Long, tempDate As Date
    Dim tempName As String
    Dim totalSheets As Long

    ' Set the Results worksheet
    Set ws = ThisWorkbook.Sheets("Results")

    ' First, count how many matching sheets we have
    totalSheets = 0
    For Each s In ThisWorkbook.Sheets
        If s.Name Like "data - *" Then
            baseName = Replace(s.Name, "data - ", "")
            parts = Split(baseName, "-")
            If UBound(parts) = 2 Then
                On Error Resume Next
                datePart = DateSerial(CInt(parts(2)), CInt(parts(0)), CInt(parts(1)))
                If Err.Number = 0 Then
                    totalSheets = totalSheets + 1
                End If
                On Error GoTo 0
            End If
        End If
    Next s

    If totalSheets < 2 Then
        MsgBox "Not enough 'data - m-d-yyyy' sheets to determine old and new references.", vbExclamation
        Exit Sub
    End If

    ' Rebuild and store name-date pairs
    ReDim sheetPairs(1 To totalSheets, 1 To 2)
    totalSheets = 0
    For Each s In ThisWorkbook.Sheets
        If s.Name Like "data - *" Then
            baseName = Replace(s.Name, "data - ", "")
            parts = Split(baseName, "-")
            If UBound(parts) = 2 Then
                On Error Resume Next
                datePart = DateSerial(CInt(parts(2)), CInt(parts(0)), CInt(parts(1)))
                If Err.Number = 0 Then
                    totalSheets = totalSheets + 1
                    sheetPairs(totalSheets, 1) = s.Name
                    sheetPairs(totalSheets, 2) = datePart
                End If
                On Error GoTo 0
            End If
        End If
    Next s

    ' Sort sheetPairs by date descending
    For i = 1 To totalSheets - 1
        For j = i + 1 To totalSheets
            If sheetPairs(j, 2) > sheetPairs(i, 2) Then
                tempName = sheetPairs(i, 1)
                tempDate = sheetPairs(i, 2)
                sheetPairs(i, 1) = sheetPairs(j, 1)
                sheetPairs(i, 2) = sheetPairs(j, 2)
                sheetPairs(j, 1) = tempName
                sheetPairs(j, 2) = tempDate
            End If
        Next j
    Next i

    ' Extract old and new sheet names
    newSheetName = sheetPairs(1, 1)
    oldSheetName = sheetPairs(2, 1)

    oldSheetName = InputBox("Confirm or edit the OLD sheet name to replace:", "Old Sheet Name", oldSheetName)
    If oldSheetName = "" Then
        MsgBox "Operation canceled.", vbExclamation
        Exit Sub
    End If

    newSheetName = InputBox("Confirm or edit the NEW sheet name to use:", "New Sheet Name", newSheetName)
    If newSheetName = "" Then
        MsgBox "Operation canceled.", vbExclamation
        Exit Sub
    End If

    ' Define the range to check
    Set formulaRange = ws.UsedRange

    Application.ScreenUpdating = False

    ' Loop through cells in the used range to update formulas
    For Each cell In formulaRange.Cells
        If cell.HasFormula Then
            If InStr(cell.Formula, oldSheetName) > 0 Then
                cell.Formula = Replace(cell.Formula, oldSheetName, newSheetName)
                count = count + 1
            End If
        End If
    Next cell

    Application.ScreenUpdating = True

    MsgBox count & " formula(s) updated from '" & oldSheetName & "' to '" & newSheetName & "'.", vbInformation
End Sub
